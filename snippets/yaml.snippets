snippet prettier
	# config: https://prettier.io/docs/en/configuration.html
	# rules: https://prettier.io/docs/en/options.html
	---
	printWidth: 80
	tabWidth: 2
	useTabs: false
	proseWrap: "preserve"
	endOfLine: "lf"
	overrides:
		- files:
				- "*.md"
			options:
				proseWrap: "always"
		- files:
				- "*.yml"
				- "*.yaml"
			options:
				singleQuote: false

snippet yamllint
	# Config: https://yamllint.readthedocs.io/en/stable/configuration.html
	# Rules: https://yamllint.readthedocs.io/en/stable/rules.html
	---
	extends: default
	rules:
		braces:
			max-spaces-inside: 1
		line-length: disable
		document-start: disable
		comments:
			min-spaces-from-content: 1

snippet semrel
	# Config: https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md
	# Plugins: https://github.com/semantic-release/semantic-release/blob/master/docs/extending/plugins-list.md
	# Examples:
	# - To run without pre-installing anything:
	#   $ npx \
	#     --package semantic-release \
	#     --package conventional-changelog-conventionalcommits \
	#     --package @semantic-release/changelog \
	#     --package @semantic-release/git \
	#     --command 'semantic-release'
	---
	branches:
		- "main"
		- "master"
		- name: "*"
			prerelease: true
	preset: "conventionalcommits"
	plugins:
		- "@semantic-release/commit-analyzer" # https://github.com/semantic-release/commit-analyzer
		- "@semantic-release/release-notes-generator" # https://github.com/semantic-release/release-notes-generator
		- "@semantic-release/changelog" # https://github.com/semantic-release/changelog
		- - "@semantic-release/git" # https://github.com/semantic-release/git
			- assets:
					- CHANGELOG.md
				message: "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"

snippet precommit
	# Config: https://pre-commit.com/#plugins
	# Hooks: https://pre-commit.com/#new-hooks
	---
	repos:
		- repo: local
			hooks:
				- id: doctoc
					name: doctoc
					description: This hook updates Table of Contents in markdown files. `brew install node` required.
					types:
						- markdown
					language: system
					entry: npx
					args:
						- doctoc
						- --notitle
						- --update-only
				- id: prettier
					name: prettier
					description: This hook formats supported file types. `brew install node` required.
					language: system
					entry: npx
					args:
						- prettier
						- --write
						- --check
						- --ignore-unknown
				- id: markdownlint
					name: markdownlint
					description: This hook lints markdown files. `brew install node` required.
					language: system
					types:
						- markdown
					entry: npx
					args:
						- markdownlint-cli
				- id: yamllint
					name: yamllint
					description: This hook lints YAML files. `brew install yamllint` required.
					language: system
					types:
						- yaml
					entry: yamllint
				- id: gofmt
					name: gofmt
					description: This hook formats Go files. `brew install go` required.
					language: system
					types:
						- go
					entry: gofmt
					args:
						- -w
				- id: golangci-lint
					name: golangci-lint
					description: This hook lints Go files. `brew install golangci-lint` required.
					language: golang
					types:
						- go
					entry: golangci-lint
					args:
						- run
						- --fix
					pass_filenames: false
				- id: gitleaks
					name: gitleaks
					description: This hook checks commits for secrets. `brew install gitleaks` required.
					language: system
					entry: gitleaks
					args:
						- --verbose
						- --no-git
				- id: shellcheck
					name: shellcheck
					description: This hook checks shell files for common problems. `brew install shellcheck` required.
					types:
						- shell
					language: system
					entry: shellcheck
				- id: hadolint
					name: hadolint
					description: This hook lints Dockerfiles. `brew install hadolint` required.
					language: system
					types:
						- dockerfile
					entry: hadolint
				- id: commitizen
					name: commitizen
					description: This hook lints commit messages. `brew install commitizen` required.
					stages:
						- commit-msg # run only in git commit-msg lifecycle event
					language: system
					entry: cz
					args:
						- check
						- --commit-msg-file

snippet markdownlint
	# config: https://github.com/DavidAnson/markdownlint#configuration
	# rules: https://github.com/DavidAnson/markdownlint/blob/main/doc/Rules.md
	---
	# enable all by default
	default: true
	# MD013
	line-length:
		code_blocks: false
	# MD046
	code-block-style:
		style: fenced
	# MD024
	no-duplicate-heading:
		siblings_only: true

snippet hadolint
	# Config: https://github.com/hadolint/hadolint#configure
	# Rules: https://github.com/hadolint/hadolint#rules
	---
	ignored:
		- DL3007
		- DL3008

	trustedRegistries:
		- docker.io
		- registry.gitlab.com
		- ghcr.io

snippet github-workflows
	# syntax: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
	---
	name: Workflow Name

	on:
		workflow_dispatch:
		pull_request:
		push:
			branches: [ "main" ]
	permissions:
		contents: read
		pull-requests: read

	concurrency:
		group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
		cancel-in-progress: true

	jobs:
		test:
			runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
			timeout-minutes: 60
			strategy:
				fail-fast: false
				matrix:
					test-group:
						[
							content,
							graphql,
							meta,
							rendering,
							routing,
							unit,
							linting,
							translations,
						]
			steps:
				- name: Check out repo
					uses: actions/checkout@v3
					with:
						lfs: ${{ matrix.test-group == 'content' }}
						persist-credentials: 'false'
				- name: Figure out which docs-early-access branch to checkout, if internal repo
					if: ${{ github.repository == 'github/docs-internal' }}
					id: check-early-access
					uses: actions/github-script@v6
					env:
						BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
					with:
						github-token: ${{ secrets.DOCUBOT_REPO_PAT }}
						result-encoding: string
						script: |
							const { BRANCH_NAME } = process.env
							try {
								const response = await github.repos.getBranch({
									owner: 'github',
									repo: 'docs-early-access',
									BRANCH_NAME,
								})
								console.log(`Using docs-early-access branch called '${BRANCH_NAME}'.`)
								return BRANCH_NAME
							} catch (err) {
								if (err.status === 404) {
									console.log(`There is no docs-early-access branch called '${BRANCH_NAME}' so checking out 'main' instead.`)
									return 'main'
								}
								throw err
							}
				- name: Check out docs-early-access too, if internal repo
					if: ${{ github.repository == 'github/docs-internal' }}
					uses: actions/checkout@v3
					with:
						repository: github/docs-early-access
						token: ${{ secrets.DOCUBOT_REPO_PAT }}
						path: docs-early-access
						ref: ${{ steps.check-early-access.outputs.result }}
				- name: Merge docs-early-access repo's folders
					if: ${{ github.repository == 'github/docs-internal' }}
					run: |
						mv docs-early-access/assets assets/images/early-access
						mv docs-early-access/content content/early-access
						mv docs-early-access/data data/early-access
						rm -r docs-early-access
				- name: Checkout LFS objects
					run: git lfs checkout
				- name: Gather files changed
					uses: trilom/file-changes-action@a6ca26c14274c33b15e6499323aac178af06ad4b
					id: get_diff_files
					with:
						output: ' '
				- name: Insight into changed files
					run: |
						echo "${{ steps.get_diff_files.outputs.files }}" > get_diff_files.txt
				- name: Setup node
					uses: actions/setup-node@v3
					with:
						node-version: 16.14.x
						cache: npm
				- name: Install dependencies
					run: npm ci
				- name: Cache nextjs build
					uses: actions/cache@v3
					with:
						path: .next/cache
						key: ${{ runner.os }}-nextjs-${{ hashFiles('package*.json') }}
				- name: Run build script
					run: npm run build
				- name: Run tests
					env:
						DIFF_FILE: get_diff_files.txt
						CHANGELOG_CACHE_FILE_PATH: tests/fixtures/changelog-feed.json
					run: npm test -- tests/${{ matrix.test-group }}/
